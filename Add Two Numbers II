# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        def reverseList(head: ListNode) -> ListNode:
            prev = None
            curr = head

            while curr:
                nxt = curr.next
                curr.next = prev
                prev = curr
                curr = nxt

            return prev

        l1 = reverseList(l1)
        l2 = reverseList(l2)
        d = ListNode(0)
        n = d
        c = 0

        while l1 or l2 or c:
            digit1 = l1.val if l1 else 0
            digit2 = l2.val if l2 else 0
            total = digit1 + digit2 + c
            c = total // 10
            r = total % 10

            n.next = ListNode(r)
            n = n.next

            if l1:
                l1 = l1.next
            if l2:
                l2 = l2.next

        return reverseList(d.next)
