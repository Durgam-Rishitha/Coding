# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def deepestLeavesSum(self, root: Optional[TreeNode]) -> int:
        def inorder(node, depth):
            nonlocal max_depth, total
            if node:
                if depth > max_depth:
                    max_depth = depth
                    total = node.val
                elif depth == max_depth:
                    total += node.val

                inorder(node.left, depth + 1)
                inorder(node.right, depth + 1)
        
        max_depth = 0
        total = 0
        inorder(root, 0)
        return total
